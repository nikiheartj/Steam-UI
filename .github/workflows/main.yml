# Name workflow
name: steam-ui-tests

# When launch auto-tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

  # Manual hook for launch
  workflow_dispatch:
    inputs:
      BaseURL:
        description: "URL for tests"
        required: true
        default: "https://store.steampowered.com/"

env:
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  REPORT_LINK_TELEGRAM: ${{ secrets.REPORT_LINK_TELEGRAM }}

jobs:
  steam-ui-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Clone the code from repository into runner (virtual machine)
        uses: actions/checkout@v4

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Caching npm-dependecies to speed up subsequent builds
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install npm
        run: npm i

      # - name: Install PW with dependencies
      #   run: npx playwright install --with-deps

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: cache-pw
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      # If cache miss, download browsers + deps
      - name: Install Playwright (full)
        if: steps.cache-pw.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      # If cache hit, only install OS deps
      - name: Install Playwright (OS deps only)
        if: steps.cache-pw.outputs.cache-hit == 'true'
        run: npx playwright install-deps

      # - name: Cleanup Allure & Playwright reports
      #   run: |
      #     rm -rf allure-results allure-report
      #     rm -rf playwright-report test-results .playwright

      - name: Launch auto-tests with ENV-override
        env:
          BASE_URL: ${{ github.event.inputs.BaseURL }}
          CI: true
        run: npx playwright test --workers=2

      - name: Save playwright-results
        uses: actions/upload-artifact@v4
        if: always()
        continue-on-error: true
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 10

      - name: Save allure-results
        uses: actions/upload-artifact@v4
        if: always()
        continue-on-error: true
        with:
          name: allure-results
          path: allure-results
          retention-days: 10

      - name: Get results from the previous launch
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Create allure-report from allure-results
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history
          keep_reports: 10

      - name: Deploy report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Generate telegram.json with the secrets
        run: |
          mkdir -p notifications/tmp
          sed \
            -e "s|\$TELEGRAM_BOT_TOKEN|${{ secrets.TELEGRAM_BOT_TOKEN }}|g" \
            -e "s|\$TELEGRAM_CHAT_ID|${{ secrets.TELEGRAM_CHAT_ID }}|g" \
            -e "s|\$REPORT_LINK_TELEGRAM|${{ secrets.REPORT_LINK_TELEGRAM }}|g" \
            notifications/telegram.json > notifications/tmp/telegram.json

      - name: Send Telegram notification
        run: |
          java "-DconfigFile=notifications/tmp/telegram.json" -jar notifications/allure-notifications-4.9.0.jar
